{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/meghvakharia/Documents/scratch/searchandpresave_next/pages/index.js\";\nimport React, { Component } from 'react';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      query: \"\",\n      // my query\n      artist: null // my response.\n\n    };\n    return _this;\n  } // gotta put async here so we can use the \"await\" syntax\n\n\n  _createClass(App, [{\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var spotifyToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch('/api/getToken');\n\n              case 3:\n                spotifyToken = _context.sent;\n                console.log('got spotify token!', spotifyToken);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('error!', _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      function search() {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var artist = {\n        name: '',\n        followers: {\n          total: ''\n        }\n      };\n\n      if (this.state.artist !== null) {\n        artist = this.state.artist;\n      }\n\n      return (// return JSX \n        React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"col-lg-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          onChange: function onChange(event) {\n            _this2.setState({\n              query: event.target.value\n            });\n          },\n          className: \"form-control\",\n          placeholder: \"Search for a song, artist, or playlist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"input-group-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.search();\n          },\n          className: \"btn btn-default\",\n          type: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Go!\")))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \" \", artist.name, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \" \", artist.followers.total, \" \")))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/meghvakharia/Documents/scratch/searchandpresave_next/pages/index.js"],"names":["React","Component","App","props","state","query","artist","fetch","spotifyToken","console","log","name","followers","total","event","setState","target","value","search"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IACMC,G;;;;;AAEF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AACE;AACXC,MAAAA,MAAM,EAAE,IAFC,CAEK;;AAFL,KAAb;AAFe;AAMlB,G,CAED;;;;;;;;;;;;;;;;uBAUmCC,KAAK,CAAC,eAAD,C;;;AAA1BC,gBAAAA,Y;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,YAAlC;;;;;;;AAKAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;;;;;;;;;;;;;;;;;6BA8EC;AAAA;;AAEL,UAAIJ,MAAM,GAAG;AACTK,QAAAA,IAAI,EAAE,EADG;AAETC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE;AADA;AAFF,OAAb;;AAMA,UAAI,KAAKT,KAAL,CAAWE,MAAX,KAAsB,IAA1B,EAAgC;AAC5BA,QAAAA,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAApB;AACH;;AAED,aACI;AACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACI,UAAA,QAAQ,EAAE,kBAAAQ,KAAK,EAAI;AAAE,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEV,cAAAA,KAAK,EAAES,KAAK,CAACE,MAAN,CAAaC;AAAtB,aAAd;AAA8C,WADvE;AAEI,UAAA,SAAS,EAAC,cAFd;AAE6B,UAAA,WAAW,EAAC,wCAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAII;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,MAAL,EAAN;AAAA,WADb;AAEI,UAAA,SAAS,EAAC,iBAFd;AAEgC,UAAA,IAAI,EAAC,QAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAJJ,CADJ,CAFJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAOZ,MAAM,CAACK,IAAd,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAOL,MAAM,CAACM,SAAP,CAAiBC,KAAxB,MAFJ,CAfJ;AAFJ;AAyBH;;;;EA7IaZ,S;;AA+IlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: \"\", // my query\n            artist: null  // my response.\n        }\n    }\n\n    // gotta put async here so we can use the \"await\" syntax\n    async search() {\n        // try / catch is eqivalent to:\n        // .then().catch() -> basically 'await' replaces .then, so you can\n        // pull data and take actions all in-line w/o having to put everything \n        // in deepending .then() statements \n\n        try {\n            // calling this on the server is necessary as Spotify'S API\n            // doesnt let you call it from localhost (the local browser running the app)\n            const spotifyToken = await fetch('/api/getToken')\n            console.log('got spotify token!', spotifyToken)\n            \n            \n\n        } catch (e) {\n            console.log('error!', e)\n        }\n\n        //console.log(json);\n\n        // var accessToken = '';\n\n        //var request = require(\"request\"); // \"Request\" library\n\n        /*\n            .then(json => {\n              console\n              const artist = json.artists.items[0];        \n              this.setState({ artist });\n            })*/\n        /*\n        request.post({\n          headers: {\n            'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n          },\n          url: 'https://accounts.spotify.com/api/token',//'https://accounts.spotify.com/api/token',\n          form: {\n            grant_type: 'client_credentials'\n          },\n          json: true,\n          mode: 'no-cors',\n          cache: 'default'\n        }, function(error, response, body) {\n          console.log('body', body);\n          console.log('response', response);\n          console.log('error', error);\n          if (!error && response.statusCode === 200) {\n            // use the access token to access the Spotify Web API\n            accessToken = body.access_token;\n            var options = {\n              url: 'https://api.spotify.com/v1/users/mbdogluver',\n              headers: {\n                'Authorization': 'Bearer ' + accessToken\n              },\n              json: true\n              //mode: 'cors',\n              //cache: 'default'\n            };\n            request.get(options, function(error, response, body) {\n              console.log(body);\n            });\n          }\n        })*/\n\n        /////\n\n        //var accessToken = token;\n\n        // var myOptions = {\n        //     method: 'GET',\n        //     headers: {\n        //         'Authorization': 'Bearer ' + accessToken\n        //     },\n        //     json: true,\n        //     //mode: 'no-cors',\n        //     cache: 'default'\n        // };\n\n        // console.log(FETCH_URL)\n\n        // fetch(FETCH_URL, myOptions)\n        //   .then(data => {\n        //     console.log(data.artists.items)\n        //     //this.setState({ artist });\n        //   })\n        //   .then(response => {\n        //     console.log(response);\n        //     response.json()\n        //     console.log(response.artists.items);\n        //   })\n        //   .catch(error => { console.log(error) })\n    }\n\n    render() {\n\n        let artist = {\n            name: '',\n            followers: {\n                total: ''\n            }\n        };\n        if (this.state.artist !== null) {\n            artist = this.state.artist;\n        }\n\n        return (\n            // return JSX \n            <div className=\"container\">\n                <hr />\n                <div className=\"col-lg-6\">\n                    <div className=\"input-group\">\n                        <input type=\"text\"\n                            onChange={event => { this.setState({ query: event.target.value }) }}\n                            className=\"form-control\" placeholder=\"Search for a song, artist, or playlist\" />\n                        <span className=\"input-group-btn\">\n                            <button\n                                onClick={() => this.search()}\n                                className=\"btn btn-default\" type=\"button\">Go!</button>\n                        </span>\n                    </div>\n                </div>\n                <hr />\n                <div>\n                    <div> {artist.name} </div>\n                    <div> {artist.followers.total} </div>\n                </div>\n\n\n            </div>\n        )\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}